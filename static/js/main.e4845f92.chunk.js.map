{"version":3,"sources":["components/Navbar.js","components/home/Event.js","components/home/EventEditor.js","components/home/Home.js","Router.js","App.js","index.js"],"names":["Navbar","className","to","Event","event","getEvents","editEvent","a","Axios","delete","_id","title","description","location","day","month","year","onClick","EventEditor","setEventEditorOpen","editEventData","useState","editorTitle","setEditorTitle","editorDescription","setEditorDescription","editorLocation","setEditorLocation","editorDay","setEditorDay","editorMonth","setEditorMonth","editorYear","setEditorYear","e","preventDefault","eventData","undefined","post","put","closeEditor","useEffect","onSubmit","htmlFor","id","type","value","onChange","target","Home","events","setEvents","eventEditorOpen","setEditEventData","get","eventsRes","data","sortedEvents","sort","b","Date","createdAt","map","i","renderEvents","Router","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4845f92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./misc/Navbar.scss\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to=\"/\"><h1>Event Manager</h1></Link>  {/* link to homepage */}\r\n            <Link to=\"/login\"><h2>Login</h2></Link>\r\n            <Link to=\"/register\"><h2>Register</h2></Link>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Axios from 'axios';\r\nimport \"./Events.scss\";\r\n\r\nfunction Event({ event, getEvents, editEvent }) {  //event is snippet object so dont have to type props.event.title etc\r\n\r\n    async function deleteEvent() {\r\n        await Axios.delete(`https://eventsappproject.herokuapp.com/event/${event._id}`);\r\n\r\n        getEvents();\r\n    }\r\n\r\n    return (\r\n        <div className=\"event\">\r\n            <div className=\"container\">\r\n                {event.title && <h2 className=\"title\">{event.title}</h2>}\r\n                {event.description && <h3 className=\"description\">{event.description}</h3>}\r\n                {event.location && <h3 className=\"location\">{event.location}</h3>}\r\n                {event.day && <h4 className=\"day\">{event.day}/</h4>}\r\n                {event.month && <h4 className=\"month\">{event.month}/</h4>}\r\n                {event.year && <h4 className=\"year\">{event.year}</h4>}\r\n                <br />\r\n            </div>\r\n            <button className=\"btn-edit\" onClick={() => editEvent(event)}>Edit</button>\r\n            <button className=\"btn-delete\" onClick={deleteEvent}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Event;","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport \"./EventEditor.scss\";\r\n\r\nfunction EventEditor({ getEvents, setEventEditorOpen, editEventData }) {\r\n\r\n    const [editorTitle, setEditorTitle] = useState(\"\");\r\n    const [editorDescription, setEditorDescription] = useState(\"\");\r\n    const [editorLocation, setEditorLocation] = useState(\"\");\r\n    const [editorDay, setEditorDay] = useState(\"\");\r\n    const [editorMonth, setEditorMonth] = useState(\"\");\r\n    const [editorYear, setEditorYear] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (editEventData) {\r\n            setEditorTitle(editEventData.title ? editEventData.title : \"\");\r\n            setEditorDescription(editEventData.description ? editEventData.description : \"\");\r\n            setEditorLocation(editEventData.location ? editEventData.location : \"\");\r\n            setEditorDay(editEventData.day ? editEventData.day : \"\");\r\n            setEditorMonth(editEventData.month ? editEventData.month : \"\");\r\n            setEditorYear(editEventData.year ? editEventData.year : \"\");\r\n        }\r\n    }, [editEventData]);\r\n\r\n\r\n    async function saveEvent(e) {\r\n        e.preventDefault();\r\n\r\n\r\n        const eventData = {\r\n\r\n            //if empty field dont make a field in the database for it db woud make field for empty string but not for undefined\r\n\r\n            title: editorTitle ? editorTitle : undefined,\r\n            description: editorDescription ? editorDescription : undefined,\r\n            location: editorLocation ? editorLocation : undefined,\r\n            day: editorDay ? editorDay : undefined,\r\n            month: editorMonth ? editorMonth : undefined,\r\n            year: editorYear ? editorYear : undefined,\r\n        };\r\n\r\n        if (!editEventData)\r\n            await Axios.post(\"https://eventsappproject.herokuapp.com/event/\", eventData);\r\n        else\r\n            await Axios.put(`https://eventsappproject.herokuapp.com/event/${editEventData._id}`, eventData);\r\n\r\n        getEvents();\r\n\r\n        closeEditor();\r\n    }\r\n    function closeEditor() {\r\n\r\n        setEventEditorOpen(false);\r\n        setEditorTitle(\"\");\r\n        setEditorDescription(\"\");\r\n        setEditorLocation(\"\");\r\n        setEditorDay(\"\");\r\n        setEditorMonth(\"\");\r\n        setEditorYear(\"\");\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"event-editor\">\r\n            <form onSubmit={saveEvent}>\r\n                <label htmlFor=\"editor-title\">Title </label>\r\n                <input\r\n                    id=\"editor-title\"\r\n                    type=\"text\"\r\n                    value={editorTitle}\r\n                    onChange={(e) => setEditorTitle(e.target.value)} />\r\n\r\n                <label htmlFor=\"editor-description\">Description </label>\r\n                <textarea\r\n                    id=\"editor-description\"\r\n                    value={editorDescription}\r\n                    onChange={(e) => setEditorDescription(e.target.value)} />\r\n\r\n                <label htmlFor=\"editor-location\">Location </label>\r\n                <input\r\n                    id=\"editor-location\"\r\n                    type=\"text\"\r\n                    value={editorLocation}\r\n                    onChange={(e) => setEditorLocation(e.target.value)} />\r\n\r\n                <label htmlFor=\"editor-day\">Day </label>\r\n                <input\r\n                    id=\"editor-day\"\r\n                    type=\"text\"\r\n                    value={editorDay}\r\n                    onChange={(e) => setEditorDay(e.target.value)} />\r\n\r\n                <label htmlFor=\"editor-month\">Month </label>\r\n                <input\r\n                    id=\"editor-month\"\r\n                    type=\"text\"\r\n                    value={editorMonth}\r\n                    onChange={(e) => setEditorMonth(e.target.value)} />\r\n\r\n                <label htmlFor=\"editor-year\">Year </label>\r\n                <input\r\n                    id=\"editor-year\"\r\n                    type=\"text\"\r\n                    value={editorYear}\r\n                    onChange={(e) => setEditorYear(e.target.value)} />\r\n\r\n                <button className=\"btn-save\" type=\"submit\">Save</button>\r\n                <button className=\"btn-cancel\" type=\"button\" onClick={closeEditor}>Cancel</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default EventEditor;","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Event from \"./Event\";\r\nimport EventEditor from \"./EventEditor\";\r\nimport \"./Home.scss\";\r\n\r\n\r\nfunction Home() {\r\n\r\n    const [events, setEvents] = useState([]);\r\n    const [eventEditorOpen, setEventEditorOpen] = useState(false);\r\n    const [editEventData, setEditEventData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getEvents();\r\n    }, []);\r\n\r\n    async function getEvents() {\r\n        const eventsRes = await Axios.get(\"https://eventsappproject.herokuapp.com/event/\");\r\n\r\n        setEvents(eventsRes.data);\r\n    }\r\n\r\n    function editEvent(eventData) {\r\n        setEditEventData(eventData);\r\n        setEventEditorOpen(true);\r\n    }\r\n\r\n\r\n    function renderEvents() {\r\n\r\n        //sort events array so newest appear at top\r\n        let sortedEvents = [...events];  //makes clone of events array\r\n        sortedEvents = sortedEvents.sort((a, b) => {  //compares 2 of the events\r\n            return new Date(b.createdAt) - new Date(a.createdAt); //compare created dates if b is negative a was created earlier so should be placed infront of b \r\n        });\r\n        return sortedEvents.map((event, i) => {  //map gets event from array\r\n            return (\r\n                <Event\r\n                    key={i}\r\n                    event={event}\r\n                    getEvents={getEvents}\r\n                    editEvent={editEvent}\r\n                />\r\n            ); //returns a new Event component where the event property is set to the event we are currently iterating over needs a key as will be returned in an array of components key is current index\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {!eventEditorOpen && (\r\n                <button className=\"btn-editor-toggle\" onClick={() => setEventEditorOpen(true)}>\r\n                    Add Event\r\n                </button>\r\n            )}\r\n\r\n            {eventEditorOpen && (\r\n                <EventEditor\r\n                    setEventEditorOpen={setEventEditorOpen}\r\n                    getEvents={getEvents}\r\n                    editEventData={editEventData}\r\n                />\r\n            )}\r\n            {renderEvents()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from \"./components/home/Home\"\r\n\r\nfunction Router() {\r\n    return <BrowserRouter>\r\n        <Navbar />\r\n        <Switch>   {/*detects path in url ie if login renders login page */}\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <Route path=\"/login\">Login COMING SOON! </Route>\r\n            <Route path=\"/register\">Register COMING SOON!</Route>\r\n        </Switch>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default Router;","import React from \"react\"\n// import './App.css';\nimport Router from \"./Router\";\nimport \"./style/index.scss\"\n\nfunction App() {\n  return <div className=\"container\"><Router /></div>\n\n\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}